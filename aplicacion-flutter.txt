/*La aplicación genera nombres que suenan bien, como "newstay", "lightstream", "mainbrake" o "graypine". 
El usuario puede solicitar el siguiente nombre, marcar como favorito el actual y revisar la lista de nombres 
favoritos en una página aparte. La aplicación responde a diferentes tamaños de pantalla.*/

import 'package:english_words/english_words.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => MyAppState(),
      child: MaterialApp(
        title: 'Namer App',
        theme: ThemeData(
          useMaterial3: true,
          colorScheme:
              ColorScheme.fromSeed(seedColor: Colors.green), //Color de fondo
        ),
        home: MyHomePage(),
      ),
    );
  }
}

class MyAppState extends ChangeNotifier {
  var current = WordPair.random();

  void getNext() {
    current = WordPair.random();
    notifyListeners();
  }

  //Agregando funcionalidad Me gusta
  var favorites = <WordPair>[];

  void toggleFavorite() {
    if (favorites.contains(current)) {
      favorites.remove(current);
    } else {
      favorites.add(current);
    }
    notifyListeners();
  }
}

//Añadir un carril de navegación utilizando la MyHomePage
class MyHomePage extends StatefulWidget {
  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  //Nueva widget con estado
  var selectedIndex = 0;
  @override
  Widget build(BuildContext context) {
    //Usando indice Seleccionado
    Widget page;
    switch (selectedIndex) {
      case 0:
        page = GeneratorPage();
      break;
      case 1:
        page = Placeholder();
      break;
      default:
      throw UnimplementedError('no widget for $selectedIndex');
    }
    
    return LayoutBuilder(
      builder: (context, constraints) {
        return Scaffold(
          body: Row(
            children: [
              SafeArea(
                child: NavigationRail(
                  extended: false,
                  destinations: [
                    NavigationRailDestination(
                      icon: Icon(Icons.home),
                      label: Text('Home'),
                    ),
                    NavigationRailDestination(
                      icon: Icon(Icons.favorite),
                      label: Text('Favorites'),
                    ),
                  ],
                  selectedIndex: selectedIndex, //cargando el estado
                  onDestinationSelected: (value) {
                    setState(() {
                      selectedIndex = value;
                    });
                  },
                ),
              ),
              Expanded(
                child: Container(
                  color: Theme.of(context).colorScheme.primaryContainer,
                  child: GeneratorPage(),
                ),
              ),
            ],
          ),
        );
      }
    );
  }
}

class GeneratorPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    var appState = context.watch<MyAppState>();
    var pair = appState.current; //Widget por separado

//Tu icono favorito
    IconData icon;
    if (appState.favorites.contains(pair)) {
      icon = Icons.favorite;
    } else {
      icon = Icons.favorite_border;
    }

// Añadiendo un boton
    return Center(
      //Centrando columna
      child: Column(
        mainAxisAlignment:
            MainAxisAlignment.center, // Centrando la interfaz de usuario
        children: [
          BigCard(pair: pair), // ← Change to this.
          SizedBox(height: 10), //Espacio entre del widget
          Row(
            mainAxisSize: MainAxisSize.min, //Insertando Especio Horizontal
            children: [
              //Agregando boton Like
              ElevatedButton.icon(
                onPressed: () {
                  appState.toggleFavorite();
                },
                icon: Icon(icon),
                label: Text('Like'),
              ),
              SizedBox(width: 10),

              //Añadir el boton de siguiente
              ElevatedButton(
                onPressed: () {
                  appState.getNext(); // ← This instead of print().
                },
                child: Text('Next'),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

//Widget class
class BigCard extends StatelessWidget {
  const BigCard({
    super.key,
    required this.pair,
  });

  final WordPair pair;

  @override
  Widget build(BuildContext context) {
    //Agregando Tema
    final theme = Theme.of(context);

    //Diseñando la aplicacion
    final style = theme.textTheme.displayMedium!.copyWith(
      color: theme.colorScheme.onPrimary,
    );

    //Diseño para nuestra aplicación
    return Card(
      //Agregando Color al Tema
      color: theme.colorScheme.primary,
      child: Padding(
        padding: const EdgeInsets.all(20),
        child: Text(
          pair.asLowerCase,
          style: style, //aplicando estilo de texto
          semanticsLabel:
              "${pair.first} ${pair.second}", //Agregando sencibilidad
        ),
      ),
    );
  }
}

//Añadir una pagina como favorito

class FavoritesPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    var appState = context.watch<MyAppState>();

    if (appState.favorites.isEmpty) {
      return Center(
        child: Text('No favorites yet.'),
      );
    }

    return ListView(
      children: [
        Padding(
          padding: const EdgeInsets.all(20),
          child: Text('You have '
              '${appState.favorites.length} favorites:'),
        ),
        for (var pair in appState.favorites)
          ListTile(
            leading: Icon(Icons.favorite),
            title: Text(pair.asLowerCase),
          ),
      ],
    );
  }
}
